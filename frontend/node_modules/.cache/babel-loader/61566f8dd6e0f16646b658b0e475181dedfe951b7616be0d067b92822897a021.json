{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UserList() {\n  _s();\n  const [users, setUsers] = useState([]); // Inisialisasi state dengan array kosong\n\n  useEffect(() => {\n    getPengguna();\n  }, []); // Hanya menjalankan sekali saat komponen dimuat\n\n  const getPengguna = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/pengguna');\n      setUsers(response.data); // Mengupdate state dengan data pengguna\n    } catch (error) {\n      console.error('Error fetching data: ', error); // Menangani kesalahan jika permintaan gagal\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(UserList, \"JadZszbqna06PpJs9hMo7Hl/LOY=\");\n_c = UserList;\nexport default UserList;\nvar _c;\n$RefreshReg$(_c, \"UserList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Link","Fragment","_Fragment","jsxDEV","_jsxDEV","UserList","_s","users","setUsers","getPengguna","response","get","data","error","console","_c","$RefreshReg$"],"sources":["C:/Users/Razan/Documents/fullstackMERN/frontend/src/components/Userlist.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport 'bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\n\r\nfunction UserList() {\r\n    const [users, setUsers] = useState([]); // Inisialisasi state dengan array kosong\r\n\r\n    useEffect(() => {\r\n        getPengguna();\r\n    }, []); // Hanya menjalankan sekali saat komponen dimuat\r\n\r\n    const getPengguna = async () => {\r\n        try {\r\n            const response = await axios.get('http://localhost:5000/pengguna');\r\n            setUsers(response.data); // Mengupdate state dengan data pengguna\r\n        } catch (error) {\r\n            console.error('Error fetching data: ', error); // Menangani kesalahan jika permintaan gagal\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default UserList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AAEvC,OAAO,WAAW;AAClB,OAAO,sCAAsC;AAC7C,OAAO,wCAAwC;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExCC,SAAS,CAAC,MAAM;IACZW,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMA,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,gCAAgC,CAAC;MAClEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC,CAAC;IACnD;EACJ,CAAC;EAED,oBACIT,OAAA,CAAAF,SAAA,mBACE,CAAC;AAGX;AAACI,EAAA,CArBQD,QAAQ;AAAAU,EAAA,GAARV,QAAQ;AAuBjB,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}